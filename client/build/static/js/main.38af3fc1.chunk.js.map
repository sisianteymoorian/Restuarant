{"version":3,"sources":["Nav/Nav.js","RestrantCard/RestrantCard.js","RestarantList/index.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","span","offset","RestrantCard","this","props","datanew","RestName","Cuisines","avgF2","Currency","HTB","HOD","AVR","RC","RT","Votes","restaurantsAdd","City","Address","Locality","sm","md","type","style","fontSize","fontStyle","fontWeight","theme","count","placement","title","color","split","map","f","trim","Math","random","width","frameBorder","scrolling","marginHeight","marginWidth","src","href","Component","index","y","data","d","i","r","length","message","banner","id","App","state","skip","search_rest","search_Cur","Count","sort","sortOrder","page","hasNxt","cuisines","isLoadingCompleted","a","axios","get","response","data_","RestrantsCount","Restrants","response1","setState","handleSort","console","log","handleSearch","handlePageDec","elementsCount","document","getElementById","childElementCount","handlePageInc","handleSrch","obj","Res_Name","post","matchedRestrants","matchedRestrantsCount","value","onChange","e","target","handleRest","placeholder","padding","dataSource","handleCursine","filterOption","inputValue","option","children","toUpperCase","indexOf","onClick","borderRight","cursor","disabled","marginLeft","active","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.38af3fc1.chunk.js","sourcesContent":["import React from 'react'\nimport './Nav.scss';\n\nimport { Row, Col} from 'antd';\nexport default function Nav() {\n  return (\n    <div className={\"nav\"}>\n    <Row>\n    <Col span={8}>\n    <h2 className={\"food\"}> Are you hungry?</h2>\n    </Col>\n    <Col span={2} offset={4} >\n    \n   \n    </Col>\n    <Col span={2} offset={2}>\n    <button className={\"write\"}>Sign in</button>\n    </Col>\n  </Row>\n    </div>\n  )\n}","import React, { Component } from 'react'\nimport { Row, Col, Tag, Icon, Divider ,Badge , Tooltip} from 'antd';\nimport './Restrant.scss' \n \n\nexport default class RestrantCard extends Component {\n   \n  // \"Restaurant ID\" : 6318506,\n  //   \"Restaurant Name\" : \"Ooma\",\n  //   \"Cuisines\" : \"Japanese, Sushi\",\n  //   \"Average Cost for two\" : 1500,\n  //   \"Currency\" : \"Botswana Pula(P)\",\n  //   \"Has Table booking\" : \"No\",\n  //   \"Has Online delivery\" : \"No\",\n  //   \"Aggregate rating\" : 4.9,\n  //   \"Rating color\" : \"Dark Green\",\n  //   \"Rating text\" : \"Excellent\",\n  //   \"Votes\" : 365\n  \n\n  render() {\n \n   \n   const {  \n    \"Restaurant Name\" : RestName,\n     Cuisines,\n    \"Average Cost for two\" : avgF2,\n    Currency,\n    \"Has Table booking\" : HTB,\n    \"Has Online delivery\" : HOD,\n    \"Aggregate rating\" : AVR,\n    \"Rating color\" : RC,\n    \"Rating text\" : RT,\n    Votes,\n    restaurantsAdd\n  } = this.props.datanew;\n\n const { City,Address,Locality } \n = restaurantsAdd[0];\n \n\n/*\n \"Restaurant ID\" : 6304287,\n    \"Country Code\" : 162,\n    \"City\" : \"Makati City\",\n    \"Address\" : \"Little Tokyo, 2277 Chino Roces Avenue, Legaspi Village, Makati City\",\n    \"Locality\" : \"Little Tokyo, Legaspi Village, Makati City\",\n    \"Locality Verbose\" : \"Little Tokyo, Legaspi Village, Makati City, Makati City\",\n    \"Longitude\" : 121.014101,\n    \"Latitude\" : 14.553708\n\n*/\n    return (\n      <div className=\"card\">\n        <Row>\n        <Col  sm={12}  md={{ span: 8 ,offset:1 }}  >\n         <div className=\"nameLoc\" >\n         <span><h2> <Icon type=\"shop\" /> {RestName}</h2></span>\n         <span> <Icon type=\"environment\" /> {City}</span>\n         <span> {Address}</span>\n         <span style={{fontSize:\".8rem\",fontStyle:\"italic\"}}>{ Locality }</span>\n         <span>   {Currency } {avgF2}</span>\n         </div>\n\n        \n        </Col>  \n        \n        <Col  sm={12}  md={{ span: 6, offset: 1 }}  >\n        <div className=\"review\" >\n        <span><h3 style={{fontWeight:\"bold\"}}>Review</h3></span>\n        <span>Aggregate rating : <Icon type=\"star\" theme=\"filled\" />  <Badge count={AVR} />({Votes}) </span>\n        <Tooltip placement=\"topLeft\" title={RC}>\n        <span>Rating Color : <Icon type=\"tag\"  theme=\"filled\"  style={{color:RC}}/></span>\n        \n      </Tooltip>\n      <br></br>\n      <span><h3 style={{fontWeight:\"bold\"}} > <Icon type=\"alert\" /> Cursine</h3></span>\n      <span>\n{\n  Cuisines.split(',').map( (f) => {\n    return(\n      <Tag key={Math.random()} color=\"magenta\">{f.trim()}</Tag>\n    )\n    \n  })\n}\n    \n      </span>\n        <br></br>\n        <span> <h3 style={{fontWeight:\"bold\"}} >  <Icon type=\"notification\" /> User Rating </h3><b> {RT}</b>  </span>\n        </div>\n        </Col>\n        <Col  sm={12}  md={{ span: 7, offset: 1 }}  >\n       \n       \n       <iframe width=\"100%\" title=\"myFrame\"  frameBorder=\"0\" scrolling=\"no\" marginHeight=\"0\" marginWidth=\"0\" src=\"https://www.openstreetmap.org/export/embed.html?bbox=10.972546935081484%2C49.59850757245689%2C10.97988545894623%2C49.60164362863992&amp;layer=mapnik&amp;marker=49.600075625759565%2C10.976216197013855\"  ></iframe><br/><small><a href=\"http://www.openstreetmap.org/?mlat=49.60008&amp;mlon=10.97622#map=18/49.60008/10.97622\">Größere Karte anzeigen</a></small> \n         \n        </Col>\n\n        </Row>\n \n\n        <Row>\n        <Col  sm={6}  md={{ span: 8, offset: 1 }}  > \n        <Icon className={ (HTB === \"Yes\") ? 'green' : 'red' } type={((HTB === \"Yes\") ? 'check' : 'close')} />  Table booking \n        <Divider type=\"vertical\"/>\n        <Icon className={ (HOD === \"Yes\") ? 'green' : 'red' } type={((HOD === \"Yes\") ? 'check' : 'close')} />   Online delivery \n         \n         </Col>\n        <Col  sm={6}  md={{ span: 4, offset: 8 }}  > <button className={\"write\"}> Order</button></Col>\n        </Row>\n        \n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport RestrantCard from '../RestrantCard/RestrantCard'\nimport { Alert } from 'antd'\nexport default class index extends Component {\n   // \"Restaurant ID\" : 6318506,\n  //   \"Restaurant Name\" : \"Ooma\",\n  //   \"Cuisines\" : \"Japanese, Sushi\",\n  //   \"Average Cost for two\" : 1500,\n  //   \"Currency\" : \"Botswana Pula(P)\",\n  //   \"Has Table booking\" : \"No\",\n  //   \"Has Online delivery\" : \"No\",\n  //   \"Aggregate rating\" : 4.9,\n  //   \"Rating color\" : \"Dark Green\",\n  //   \"Rating text\" : \"Excellent\",\n  //   \"Votes\" : 365\n \n\n  render() {\n\n    \n      const data__ = this.props.data;\n\n     let y =  data__.map((d,i) =>{\n\n       \n       return(\n         <div  key={i} ><RestrantCard datanew={d} />  <br></br> </div>\n        \n       )\n\n      });\n     const r  =  (y.length > 0 ) ? (  y ) : (    <Alert type=\"error\"  message=\"No more Reseults found !!\" banner /> )\n \n\n    return (\n      <div id=\"Restrantresult\">\n     { r }\n       \n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport Nav from './Nav/Nav'\nimport './App.scss';\nimport axios from 'axios'\nimport { Row, Col, Divider, Icon, Button, AutoComplete, Skeleton } from 'antd';\n\nimport RestarantList from './RestarantList/index'\n\nclass App extends Component {\n\n  state = {\n    skip: 0,\n    search_rest: \"\",\n    search_Cur: \"\",\n    data: [],\n    Count: 0,\n    sort: \"Aggregate rating\",\n    sortOrder: -1,\n    page: 1,\n    hasNxt: false,\n    cuisines: [],\n    isLoadingCompleted: false\n\n\n  }\n\n  async componentDidMount() {\n\n    const response = await axios.get(\"https://\" + process.env.REACT_APP_backend + \"/restaurant\");\n\n\n    const data_ = response.data;\n    const RestrantsCount = data_.Restrants.length;\n    const hasNxt = (RestrantsCount === 0) ? false : true;\n\n    const response1 = await axios.get(\"https://\" + process.env.REACT_APP_backend + \"/restaurant/cuisines\");\n\n    const cuisines = response1.data;\n\n\n\n\n    this.setState({\n      ...this.state, data: data_.Restrants, Count: data_.Count, hasNxt,\n      cuisines: [...this.state.cuisines, ...cuisines], isLoadingCompleted: true\n    });\n\n  }\n\n\n\n\n  render() {\n\n\n\n    const handleRest = (e) => {\n\n      this.setState({ search_rest: e.target.value })\n\n    }\n    const handleCursine = (e) => {\n\n      console.log(e)\n      this.setState({ search_Cur: e })\n\n    }\n    const handleSort = async (sort, sortOrder) => {\n      console.log(sort + \" 7777  \" + sortOrder)\n      this.setState({\n        ...this.state,\n        sort,\n        sortOrder\n      }\n        ,\n        () => handleSearch()\n      );\n\n\n\n    }\n\n    const handlePageDec = async () => {\n\n      if (this.state.page > 1) {\n        await this.setState({ page: this.state.page - 1 })\n\n        var elementsCount = document.getElementById(\"Restrantresult\").childElementCount;\n\n        this.setState({ skip: elementsCount * this.state.page }, () => handleSearch());\n      }\n\n\n    }\n\n    const handlePageInc = async () => {\n      await this.setState({ page: this.state.page + 1 });\n\n      var elementsCount = document.getElementById(\"Restrantresult\").childElementCount;\n\n      this.setState({ skip: elementsCount * this.state.page }, () => handleSearch());\n\n\n    }\n\n    const handleSrch = async () => {\n      await this.setState({ page: 1, skip: 0 }, () => handleSearch());\n\n    }\n\n    const handleSearch = async () => {\n\n      const { search_rest, search_Cur, sort, sortOrder, skip } = this.state;\n\n      this.setState({ isLoadingCompleted: false });\n\n      const obj = {\n        Res_Name: search_rest,\n        Cuisines: search_Cur,\n        sort,\n        sortOrder,\n        skip\n\n      }\n\n\n      const r = await axios.post(\"https://\" + process.env.REACT_APP_backend + \"/restaurant/search\", {\n        obj\n      });\n\n      const { Count, matchedRestrants } = r.data;\n      const matchedRestrantsCount = matchedRestrants.length;\n\n      const hasNxt = (matchedRestrantsCount === 0) ? false : true;\n\n\n      this.setState({\n        ...this.state,\n\n        Count,\n        hasNxt,\n        data: matchedRestrants,\n        isLoadingCompleted: true\n\n      })\n\n    }\n\n    return (\n      <div className=\"App\">\n        <Nav />\n        <section className={\"container\"} >\n          <Row>\n            <Col md={{ span: 10 }} >\n              <input className={\"g inp\"} value={this.state.search_rest} onChange={(e) => handleRest(e)} placeholder={\"Restrant   \"} /> </Col>\n            <Col md={{ span: 10 }} >\n              <AutoComplete\n                className={\"g inp\"}\n                style={{ padding: \"0px\" }}\n                dataSource={this.state.cuisines}\n                placeholder=\"Cuisines ...\"\n                value={this.state.search_Cur}\n                onChange={(e) => handleCursine(e)}\n                filterOption={(inputValue, option) => option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1}\n              />\n\n\n              {/**           <input className={\"g inp\"} onChange={(e) => handleCursine(e)} value={this.state.search_Cur} placeholder={\"Cursine ...   \"} />  */}\n            </Col>\n\n            <Col md={{ span: 4 }} >\n              <button className={\"write\"} onClick={handleSrch}>Search</button></Col>\n\n          </Row>\n\n          <br></br>\n          <Row>\n            <Col md={{ span: 6, offset: 1 }} style={{ borderRight: \"2px solid #14b38e\" }}  > <b>Rating </b>\n              <Icon style={{ cursor: \"pointer\" }} type=\"arrow-down\" onClick={() => { handleSort(\"Aggregate rating\", -1) }} /> <Divider type=\"vertical\" />\n              <Icon style={{ cursor: \"pointer\" }} type=\"arrow-up\" onClick={() => { handleSort(\"Aggregate rating\", 1) }} />   </Col>\n            <Col md={{ span: 6, offset: 1 }} style={{ borderRight: \"2px solid #14b38e\" }} >\n              <b>Votes</b> <Icon onClick={() => { handleSort(\"Votes\", -1) }} style={{ cursor: \"pointer\" }} type=\"arrow-down\" />\n              <Divider type=\"vertical\" /> <Icon onClick={() => { handleSort(\"Votes\", 1) }} style={{ cursor: \"pointer\" }} type=\"arrow-up\" />\n            </Col>\n            <Col md={{ span: 8, offset: 1 }}  >\n              <b>Average Cost for two</b> <Icon onClick={() => { handleSort(\"Average Cost for two\", -1) }} style={{ cursor: \"pointer\" }} type=\"arrow-down\" />\n              <Divider type=\"vertical\" /> <Icon onClick={() => { handleSort(\"Average Cost for two\", 1) }} style={{ cursor: \"pointer\" }} type=\"arrow-up\" /> </Col>\n          </Row>\n          <Divider />\n          <Row>\n            <Col md={{ span: 2, offset: 1 }}> <Button disabled={(this.state.page <= 1) ? \"disabled\" : \"\"} type=\"dashed\" onClick={handlePageDec} >Prev</Button> </Col>\n            <Col md={{ span: 8, offset: 4 }}> <span>About {this.state.Count} results <Divider type=\"vertical\" /> Page : {this.state.page}</span> </Col>\n            <Col md={{ span: 2, offset: 6 }}> <Button disabled={(this.state.hasNxt) ? \"\" : \"disabled\"} type=\"dashed\" onClick={handlePageInc} >Next</Button> </Col>\n\n          </Row>\n\n\n\n        </section>\n        <section className={\"RestarantCard\"}>\n\n          {(!this.state.isLoadingCompleted)\n            ? <div style={{ width: \"70%\", marginLeft: \"10%\" }} ><Skeleton active /></div>\n            : <RestarantList data={this.state.data} />}\n\n\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit http://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}